{"version":3,"file":"index.es.js","sources":["../../../../material-ui-dropzone-master/src/helpers.js","../../../../material-ui-dropzone-master/src/components/PreviewList.js","../../../../material-ui-dropzone-master/src/components/SnackbarContentWrapper.js","../../../../material-ui-dropzone-master/src/components/DropzoneArea.js","../../../../material-ui-dropzone-master/src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\n    if (file.type.split('/')[0] === 'image') {\n        return true;\n    }\n}\n\nexport function convertBytesToMbsOrKbs(filesize) {\n    let size = '';\n    // I know, not technically correct...\n    if (filesize >= 1000000) {\n        size = (filesize / 1000000) + ' megabytes';\n    } else if (filesize >= 1000) {\n        size = (filesize / 1000) + ' kilobytes';\n    } else {\n        size = filesize + ' bytes';\n    }\n    return size;\n}\n\nexport async function createFileFromUrl(url) {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const metadata = {type: data.type};\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\n    const ext = data.type.split('/').pop();\n    // Append extension only if not already present\n    const fullFilename = !filename?.endsWith(ext) ? `${filename}.${ext}` : filename;\n    return new File([data], fullFilename, metadata);\n}\n\nexport function readFile(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n            resolve(event?.target?.result);\n        };\n        reader.onerror = (event) => {\n            reader.abort();\n            reject(event);\n        };\n        reader.readAsDataURL(file);\n    });\n}\n","import Chip from '@material-ui/core/Chip';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {withStyles} from '@material-ui/core/styles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {isImage} from '../helpers';\n\nconst styles = {\n    removeBtn: {\n        transition: '.5s ease',\n        position: 'absolute',\n        opacity: 0,\n        top: 15,\n        right: 75,\n        width: 40,\n        height: 40,\n    },\n    smallPreviewImg: {\n        height: 100,\n        width: 'initial',\n        maxWidth: '100%',\n        marginTop: 5,\n        marginRight: 10,\n        color: 'rgba(ff, ff, ff, 1)',\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\n        boxSizing: 'border-box',\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\n        borderRadius: 2,\n        zIndex: 5,\n        opacity: 1,\n    },\n    imageContainer: {\n        position: 'relative',\n        zIndex: 10,\n        textAlign: 'center',\n        '&:hover $smallPreviewImg': {\n            opacity: 0.3,\n        },\n        '&:hover $removeBtn': {\n            opacity: 1,\n        },\n    },\n};\n\nfunction PreviewList({\n    fileObjects,\n    handleRemove,\n    showFileNames,\n    useChipsForPreview,\n    previewChipProps,\n    previewGridClasses,\n    previewGridProps,\n    classes,\n}) {\n    if (useChipsForPreview) {\n        return (\n            fileObjects.map((fileObject, i) => (\n                <div key={i}>\n                    <Chip\n                        label={fileObject.file.name}\n                        onDelete={handleRemove(i)}\n                        variant=\"outlined\"\n                        {...previewChipProps}\n                    />\n                </div>\n            ))\n        );\n    }\n\n    return (\n        <Grid container={true} spacing={8} className={previewGridClasses.container} {...previewGridProps.container}>\n            {fileObjects.map((fileObject, i) => {\n                const img = (isImage(fileObject.file) ?\n                    <img className={classes.smallPreviewImg} role=\"presentation\" src={fileObject.data} /> :\n                    <AttachFileIcon className={classes.smallPreviewImg} />\n                );\n\n                return (\n                    <Grid\n                        key={i}\n                        item={true}\n                        xs={4}\n                        {...previewGridProps.item}\n                        className={clsx(previewGridClasses.item, classes.imageContainer)}\n                    >\n                        {img}\n\n                        {showFileNames && (\n                            <Typography variant=\"body1\" component=\"p\">\n                                {fileObject.file.name}\n                            </Typography>\n                        )}\n\n                        <Fab\n                            onClick={handleRemove(i)}\n                            aria-label=\"Delete\"\n                            className={classes.removeBtn}\n                        >\n                            <DeleteIcon />\n                        </Fab>\n                    </Grid>\n                );\n            })}\n        </Grid>\n    );\n}\n\nPreviewList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    previewChipProps: PropTypes.object,\n    previewGridClasses: PropTypes.object,\n    previewGridProps: PropTypes.object,\n    showFileNames: PropTypes.bool,\n    useChipsForPreview: PropTypes.bool,\n};\n\nexport default withStyles(styles)(PreviewList);\n","import green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport {withStyles} from '@material-ui/core/styles';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles = (theme) => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction SnackbarContentWrapper(props) {\n    const {classes, className, message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default withStyles(styles)(SnackbarContentWrapper);\n","import Snackbar from \"@material-ui/core/Snackbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { Fragment } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nimport { convertBytesToMbsOrKbs, createFileFromUrl, readFile } from \"../helpers\";\n\nimport PreviewList from \"./PreviewList\";\nimport SnackbarContentWrapper from \"./SnackbarContentWrapper\";\n\nconst styles = {\n  \"@keyframes progress\": {\n    \"0%\": {\n      backgroundPosition: \"0 0\",\n    },\n    \"100%\": {\n      backgroundPosition: \"-70px 0\",\n    },\n  },\n  dropZone: {\n    position: \"relative\",\n    width: \"100%\",\n    minHeight: \"250px\",\n    // backgroundColor: '#F0F0F0',\n    border: \"dashed\",\n    borderColor: \"#C8C8C8\",\n    cursor: \"pointer\",\n    boxSizing: \"border-box\",\n  },\n  stripes: {\n    border: \"solid\",\n    backgroundImage: \"repeating-linear-gradient(-45deg, #F0F0F0, #F0F0F0 25px, #679267 25px, #679267 50px)\",\n    animation: \"progress 2s linear infinite !important\",\n    backgroundSize: \"150% 100%\",\n  },\n  rejectStripes: {\n    backgroundImage: \"repeating-linear-gradient(-45deg, #F0F0F0, #F0F0F0 25px, #679267 25px, #679267 50px)\",\n  },\n  dropzoneTextStyle: {\n    textAlign: \"center\",\n  },\n};\n\nconst defaultSnackbarAnchorOrigin = {\n  horizontal: \"left\",\n  vertical: \"bottom\",\n};\n\n/**\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\n */\nclass DropzoneArea extends React.PureComponent {\n  state = {\n    fileObjects: [],\n    openSnackBar: false,\n    snackbarMessage: \"\",\n    snackbarVariant: \"success\",\n  };\n\n  componentDidMount() {\n    this.filesArray(this.props.initialFiles);\n  }\n\n  componentWillUnmount() {\n    const { clearOnUnmount, onChange } = this.props;\n\n    if (clearOnUnmount) {\n      this.setState({\n        fileObjects: [],\n      });\n\n      if (onChange) {\n        onChange([]);\n      }\n    }\n  }\n\n  filesArray = async (urls) => {\n    try {\n      const fileObjs = await Promise.all(\n        urls.map(async (url) => {\n          const file = await createFileFromUrl(url);\n          const data = await readFile(file);\n\n          return {\n            file,\n            data,\n          };\n        })\n      );\n\n      this.setState(\n        (state) => ({\n          fileObjects: [].concat(state.fileObjects, fileObjs),\n        }),\n        () => {\n          const { onChange } = this.props;\n          const { fileObjects } = this.state;\n\n          if (onChange) {\n            onChange(fileObjects.map((fileObject) => fileObject.file));\n          }\n        }\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  handleDropAccepted = async (acceptedFiles, evt) => {\n    const { filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onDrop } = this.props;\n    const { fileObjects } = this.state;\n\n    if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\n      this.setState({\n        openSnackBar: true,\n        snackbarMessage: getFileLimitExceedMessage(filesLimit),\n        snackbarVariant: \"error\",\n      });\n      return;\n    }\n\n    // Notify Drop event\n    if (onDrop) {\n      onDrop(acceptedFiles, evt);\n    }\n\n    // Retrieve fileObjects data\n    const fileObjs = await Promise.all(\n      acceptedFiles.map(async (file) => {\n        const data = await readFile(file);\n        return {\n          file,\n          data,\n        };\n      })\n    );\n\n    // Display message\n    const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), \"\");\n    this.setState({\n      openSnackBar: true,\n      snackbarMessage: message,\n      snackbarVariant: \"success\",\n    });\n\n    // Update component state\n    this.setState(\n      (state) => {\n        // Handle a single file\n        if (filesLimit <= 1) {\n          return {\n            fileObjects: [].concat(fileObjs[0]),\n          };\n        }\n\n        // Handle multiple files\n        return {\n          fileObjects: [].concat(state.fileObjects, fileObjs),\n        };\n      },\n      () => {\n        const { onChange } = this.props;\n        const { fileObjects } = this.state;\n\n        if (onChange) {\n          onChange(fileObjects.map((fileObject) => fileObject.file));\n        }\n      }\n    );\n  };\n\n  handleDropRejected = (rejectedFiles, evt) => {\n    const { acceptedFiles, getDropRejectMessage, maxFileSize, onDropRejected } = this.props;\n\n    let message = \"\";\n    rejectedFiles.forEach((rejectedFile) => {\n      message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\n    });\n\n    if (onDropRejected) {\n      onDropRejected(rejectedFiles, evt);\n    }\n\n    this.setState({\n      openSnackBar: true,\n      snackbarMessage: message,\n      snackbarVariant: \"error\",\n    });\n  };\n\n  handleRemove = (fileIndex) => (event) => {\n    event.stopPropagation();\n\n    const { getFileRemovedMessage, onChange, onDelete } = this.props;\n    const { fileObjects } = this.state;\n\n    // Find removed fileObject\n    const removedFileObj = fileObjects.filter((fileObject, i) => {\n      return i === fileIndex;\n    })[0];\n    // Calculate remaining fileObjects array\n    const remainingFileObjs = fileObjects.filter((fileObject, i) => {\n      return i !== fileIndex;\n    });\n\n    this.setState({ fileObjects: remainingFileObjs }, () => {\n      if (onDelete) {\n        onDelete(removedFileObj.file);\n      }\n\n      if (onChange) {\n        onChange(this.state.fileObjects.map((fileObject) => fileObject.file));\n      }\n\n      this.setState({\n        openSnackBar: true,\n        snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\n        snackbarVariant: \"info\",\n      });\n    });\n  };\n\n  handleCloseSnackbar = () => {\n    this.setState({\n      openSnackBar: false,\n    });\n  };\n\n  render() {\n    const {\n      acceptedFiles,\n      alertSnackbarProps,\n      classes,\n      disableRejectionFeedback,\n      dropzoneClass,\n      dropzoneParagraphClass,\n      dropzoneProps,\n      dropzoneText,\n      filesLimit,\n      inputProps,\n      maxFileSize,\n      previewChipProps,\n      previewGridClasses,\n      previewGridProps,\n      previewText,\n      showAlerts,\n      showFileNames,\n      showFileNamesInPreview,\n      showPreviews,\n      showPreviewsInDropzone,\n      useChipsForPreview,\n    } = this.props;\n    const { fileObjects, openSnackBar, snackbarMessage, snackbarVariant } = this.state;\n\n    const acceptFiles = acceptedFiles?.join(\",\");\n    const isMultiple = filesLimit > 1;\n    const previewsVisible = showPreviews && fileObjects.length > 0;\n    const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\n\n    return (\n      <Fragment>\n        <Dropzone\n          {...dropzoneProps}\n          accept={acceptFiles}\n          onDropAccepted={this.handleDropAccepted}\n          onDropRejected={this.handleDropRejected}\n          maxSize={maxFileSize}\n          multiple={isMultiple}\n        >\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\n            <div\n              {...getRootProps()}\n              className={clsx(\n                classes.dropZone,\n                dropzoneClass,\n                isDragActive && classes.stripes,\n                !disableRejectionFeedback && isDragReject && classes.rejectStripes\n              )}\n            >\n              <input {...inputProps} {...getInputProps()} />\n\n              <div className={classes.dropzoneTextStyle}>\n                <Typography\n                  style={this.props.dropzoneLabelsStyle}\n                  variant=\"h5\"\n                  component=\"p\"\n                  className={clsx(classes.dropzoneParagraph, dropzoneParagraphClass)}\n                >\n                  {dropzoneText}\n                </Typography>\n                <CloudUploadIcon style={this.props.dropzoneLabelsStyle} className={this.props.uploadIconClass} />\n              </div>\n\n              {previewsInDropzoneVisible && (\n                <PreviewList\n                  fileObjects={fileObjects}\n                  handleRemove={this.handleRemove}\n                  showFileNames={showFileNames}\n                  useChipsForPreview={useChipsForPreview}\n                  previewChipProps={previewChipProps}\n                  previewGridClasses={previewGridClasses}\n                  previewGridProps={previewGridProps}\n                />\n              )}\n            </div>\n          )}\n        </Dropzone>\n\n        {previewsVisible && (\n          <Fragment>\n            <Typography variant=\"subtitle1\" component=\"span\">\n              {previewText}\n            </Typography>\n\n            <PreviewList\n              fileObjects={fileObjects}\n              handleRemove={this.handleRemove}\n              showFileNames={showFileNamesInPreview}\n              useChipsForPreview={useChipsForPreview}\n              previewChipProps={previewChipProps}\n              previewGridClasses={previewGridClasses}\n              previewGridProps={previewGridProps}\n            />\n          </Fragment>\n        )}\n\n        {showAlerts && (\n          <Snackbar\n            anchorOrigin={defaultSnackbarAnchorOrigin}\n            autoHideDuration={6000}\n            {...alertSnackbarProps}\n            open={openSnackBar}\n            onClose={this.handleCloseSnackbar}\n          >\n            <SnackbarContentWrapper\n              onClose={this.handleCloseSnackbar}\n              variant={snackbarVariant}\n              message={snackbarMessage}\n            />\n          </Snackbar>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nDropzoneArea.defaultProps = {\n  acceptedFiles: [\"image/*\", \"video/*\", \"application/*\"],\n  filesLimit: 3,\n  maxFileSize: 3000000,\n  dropzoneText: \"Drag and drop a file here or click\",\n  previewText: \"Preview:\",\n  disableRejectionFeedback: false,\n  showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\n  showPreviewsInDropzone: true,\n  showFileNames: false,\n  showFileNamesInPreview: false,\n  useChipsForPreview: false,\n  previewChipProps: {},\n  previewGridClasses: {},\n  previewGridProps: {},\n  showAlerts: true,\n  alertSnackbarProps: {\n    anchorOrigin: {\n      horizontal: \"left\",\n      vertical: \"bottom\",\n    },\n    autoHideDuration: 6000,\n  },\n  clearOnUnmount: true,\n  initialFiles: [],\n  getFileLimitExceedMessage: (filesLimit) =>\n    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`,\n  getFileAddedMessage: (fileName) => `File ${fileName} successfully added.`,\n  getFileRemovedMessage: (fileName) => `File ${fileName} removed.`,\n  getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\n    let message = `File ${rejectedFile.name} was rejected. `;\n    if (!acceptedFiles.includes(rejectedFile.type)) {\n      message += \"File type not supported. \";\n    }\n    if (rejectedFile.size > maxFileSize) {\n      message += \"File is too big. Size limit is \" + convertBytesToMbsOrKbs(maxFileSize) + \". \";\n    }\n    return message;\n  },\n};\n\nDropzoneArea.propTypes = {\n  /** @ignore */\n  classes: PropTypes.object.isRequired,\n  /** A list of file types to accept.\n   * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\n   */\n  acceptedFiles: PropTypes.arrayOf(PropTypes.string),\n  /** Maximum number of files that can be loaded into the dropzone. */\n  filesLimit: PropTypes.number,\n  /** Maximum file size (in bytes) that the dropzone will accept. */\n  maxFileSize: PropTypes.number,\n  /** Text inside the dropzone. */\n  dropzoneText: PropTypes.string,\n  /** Custom CSS class name for dropzone container. */\n  dropzoneClass: PropTypes.string,\n  /** Custom CSS class name for text inside the container. */\n  dropzoneLabelsStyle: PropTypes.object,\n  uploadIconClass: PropTypes.object,\n  dropzoneParagraphClass: PropTypes.string,\n  /** Disable feedback effect when dropping rejected files. */\n  disableRejectionFeedback: PropTypes.bool,\n  /** Shows previews **BELOW** the dropzone. */\n  showPreviews: PropTypes.bool,\n  /** Shows preview **INSIDE** the dropzone area. */\n  showPreviewsInDropzone: PropTypes.bool,\n  /** Shows file name under the dropzone image. */\n  showFileNames: PropTypes.bool,\n  /** Shows file name under the image. */\n  showFileNamesInPreview: PropTypes.bool,\n  /** Uses deletable Material-UI Chip components to display file names. */\n  useChipsForPreview: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\n   *\n   * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\n   */\n  previewChipProps: PropTypes.object,\n  /**\n   * Custom CSS classNames for preview Grid components.<br/>\n   * Should be in the form {container: string, item: string, image: string}.\n   */\n  previewGridClasses: PropTypes.object,\n  /**\n   * Props to pass to the Material-UI Grid components.<br/>\n   * Should be in the form {container: GridProps, item: GridProps}.\n   *\n   * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\n   */\n  previewGridProps: PropTypes.object,\n  /** The label for the file preview section. */\n  previewText: PropTypes.string,\n  /** Shows styled Material-UI Snackbar when files are dropped, deleted or rejected. */\n  showAlerts: PropTypes.bool,\n  /**\n   * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\n   *\n   * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\n   */\n  alertSnackbarProps: PropTypes.object,\n  /**\n   * Props to pass to the Dropzone component.\n   *\n   * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\n   */\n  dropzoneProps: PropTypes.object,\n  /**\n   * Attributes applied to the input element.\n   *\n   * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\n   */\n  inputProps: PropTypes.object,\n  /** Clear uploaded files when component is unmounted. */\n  clearOnUnmount: PropTypes.bool,\n  /** List of URLs of already uploaded images.<br/>**Note:** Please take care of CORS. */\n  initialFiles: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Get alert message to display when files limit is exceed.\n   *\n   * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\n   *\n   * @param {number} filesLimit The `filesLimit` currently set for the component.\n   */\n  getFileLimitExceedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a new file is added.\n   *\n   * *Default*: \"File ${fileName} successfully added.\"\n   *\n   * @param {string} fileName The newly added file name.\n   */\n  getFileAddedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is removed.\n   *\n   * *Default*: \"File ${fileName} removed.\"\n   *\n   * @param {string} fileName The name of the removed file.\n   */\n  getFileRemovedMessage: PropTypes.func,\n  /**\n   * Get alert message to display when a file is rejected onDrop.\n   *\n   * *Default*: \"File ${rejectedFile.name} was rejected.\"\n   *\n   * @param {Object} rejectedFile The file that got rejected\n   * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\n   * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\n   */\n  getDropRejectMessage: PropTypes.func,\n  /**\n   * Fired when the files inside dropzone change.\n   *\n   * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Fired when the user drops files into the dropzone.\n   *\n   * @param {File[]} droppedFiles All the files dropped into the dropzone.\n   */\n  onDrop: PropTypes.func,\n  /**\n   * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\n   *\n   * @param {File[]} rejectedFiles All the rejected files.\n   */\n  onDropRejected: PropTypes.func,\n  /**\n   * Fired when a file is deleted from the previews panel.\n   *\n   * @param {File} deletedFile The file that was removed.\n   */\n  onDelete: PropTypes.func,\n};\n\nexport default withStyles(styles)(DropzoneArea);\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport {Fragment} from 'react';\n\nimport DropzoneArea from './DropzoneArea';\n\n// Split props related to DropzoneDialog from DropzoneArea ones\nfunction splitDropzoneDialogProps(allProps) {\n    const {\n        cancelButtonText,\n        dialogProps,\n        dialogTitle,\n        fullWidth,\n        maxWidth,\n        onClose,\n        onSave,\n        open,\n        submitButtonText,\n        ...dropzoneAreaProps\n    } = allProps;\n\n    return [\n        {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            onClose,\n            onSave,\n            open,\n            submitButtonText,\n        },\n        dropzoneAreaProps,\n    ];\n}\n\n/**\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\n *\n * It supports all the Props and Methods from `DropzoneArea`.\n */\nclass DropzoneDialog extends React.PureComponent {\n    state = {\n        files: [],\n    };\n\n    handleClose = (event) => {\n        const {onClose} = this.props;\n        // Notify onClose\n        if (onClose) {\n            onClose(event);\n        }\n    }\n\n    handleChange = (files) => {\n        const {onChange} = this.props;\n\n        this.setState({\n            files,\n        });\n\n        if (onChange) {\n            onChange(files);\n        }\n    }\n\n    handleSaveClick = () => {\n        const {onSave} = this.props;\n        const {files} = this.state;\n\n        if (onSave) {\n            onSave(files);\n        }\n    }\n\n    render() {\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\n        const {\n            cancelButtonText,\n            dialogProps,\n            dialogTitle,\n            fullWidth,\n            maxWidth,\n            open,\n            submitButtonText,\n        } = dropzoneDialogProps;\n        const {files} = this.state;\n\n        // Submit button state\n        const submitDisabled = files.length === 0;\n\n        return (\n            <Fragment>\n                <Dialog\n                    {...dialogProps}\n                    fullWidth={fullWidth}\n                    maxWidth={maxWidth}\n                    onClose={this.handleClose}\n                    open={open}\n                >\n                    <DialogTitle>{dialogTitle}</DialogTitle>\n\n                    <DialogContent>\n                        <DropzoneArea\n                            {...dropzoneAreaProps}\n                            onChange={this.handleChange}\n                        />\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.handleClose}\n                        >\n                            {cancelButtonText}\n                        </Button>\n\n                        <Button\n                            color=\"primary\"\n                            disabled={submitDisabled}\n                            onClick={this.handleSaveClick}\n                        >\n                            {submitButtonText}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nDropzoneDialog.defaultProps = {\n    ...DropzoneArea.defaultProps,\n    open: false,\n    dialogTitle: 'Upload file',\n    dialogProps: {},\n    fullWidth: true,\n    maxWidth: 'sm',\n    cancelButtonText: 'Cancel',\n    submitButtonText: 'Submit',\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    showFileNamesInPreview: true,\n};\n\nDropzoneDialog.propTypes = {\n    ...DropzoneArea.propTypes,\n    /** Sets whether the dialog is open or closed. */\n    open: PropTypes.bool,\n    /** The Dialog title. */\n    dialogTitle: PropTypes.string,\n    /**\n     * Props to pass to the Material-UI Dialog components.\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\n     */\n    dialogProps: PropTypes.object,\n    /**\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\n     * Notice that the dialog width grow is limited by the default margin.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\n     * Set to `false` to disable `maxWidth`.\n     */\n    maxWidth: PropTypes.string,\n    /** Cancel button text in dialog. */\n    cancelButtonText: PropTypes.string,\n    /** Submit button text in dialog. */\n    submitButtonText: PropTypes.string,\n    /**\n     * Fired when the modal is closed\n     *\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\n     */\n    onClose: PropTypes.func,\n    /**\n     * Fired when the user clicks the Submit button.\n     *\n     * @param {File[]} files All the files currently inside the Dropzone.\n     */\n    onSave: PropTypes.func,\n    /**\n     * Shows previews **BELOW** the dropzone.<br/>\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\n     */\n    showPreviews: PropTypes.bool,\n    /** Shows preview **INSIDE** the dropzone area. */\n    showPreviewsInDropzone: PropTypes.bool,\n    /** Shows file name under the image. */\n    showFileNamesInPreview: PropTypes.bool,\n};\n\nexport default DropzoneDialog;\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","ext","fullFilename","endsWith","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","removeBtn","transition","position","opacity","top","right","width","height","smallPreviewImg","maxWidth","marginTop","marginRight","color","boxSizing","boxShadow","borderRadius","zIndex","imageContainer","textAlign","React.createElement","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","map","fileObject","i","name","container","img","item","clsx","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","spacing","message","display","alignItems","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","close","string","node","oneOf","backgroundPosition","dropZone","minHeight","border","borderColor","cursor","stripes","backgroundImage","animation","backgroundSize","rejectStripes","dropzoneTextStyle","defaultSnackbarAnchorOrigin","horizontal","vertical","DropzoneArea","state","openSnackBar","snackbarMessage","snackbarVariant","filesArray","urls","all","fileObjs","setState","concat","onChange","console","log","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onDrop","length","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","filter","remainingFileObjs","handleCloseSnackbar","initialFiles","clearOnUnmount","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneProps","dropzoneText","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","getRootProps","getInputProps","isDragActive","isDragReject","dropzoneLabelsStyle","dropzoneParagraph","uploadIconClass","React","defaultProps","anchorOrigin","autoHideDuration","fileName","includes","number","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","dropzoneAreaProps","DropzoneDialog","files","handleClose","handleChange","handleSaveClick","dropzoneDialogProps","submitDisabled"],"mappings":"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"}